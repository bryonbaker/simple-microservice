apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: Namespace
  metadata:
    name: ns1
    labels:
      name: ns1

- apiVersion: v1
  kind: Namespace
  metadata:
    name: ns2
    labels:
      name: ns2

# This policy will block ingress traffic to namespace ns2
# Test this with ping between the two pods using their cluster IP,
# or via curl and the NodePort.
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: default-deny
    namespace: ns1
  spec:
    podSelector: {}
    policyTypes:
    - Ingress
    ingress:
    - from:
      # Allow ip addresses from 10.10.0.0 -> 10.10.0.49
      - ipBlock:
          cidr: "10.10.0.0/27"
      - ipBlock:
          cidr: "10.10.0.32/28"
      - ipBlock:
          cidr: "10.10.0.48/31"

- apiVersion: v1
  kind: Pod
  metadata:
    name: pod1-ns1
    namespace: ns1
    labels:
      app: svc-ns1
  spec:
    containers:
    - name: ns1-c1
      image: 10.10.0.100:6088/simplemicroservice:1.0

    - name: ns1-c2
      image: nginx

- apiVersion: v1
  kind: Pod
  metadata:
    name: pod1-ns2
    namespace: ns2
    labels:
      app: svc-ns2
  spec:
    containers:
    - name: ns2-c1
      image: 10.10.0.100:6088/simplemicroservice:1.1
    - name: ns2-c2
      image: nginx

- apiVersion: v1
  kind: Service
  metadata:
    name: svc-ns1
    namespace: ns1
  spec:
    selector:
      app: svc-ns1
    ports:
    - name: simpleservice1
      nodePort: 32500
      port: 10000
    - name: webserver2
      nodePort: 32501
      port: 80
    type: NodePort
  
- apiVersion: v1
  kind: Service
  metadata:
    name: svc-ns2
    namespace: ns2
  spec:
    selector:
      app: svc-ns2
    ports:
    - name: simpleservice2
      nodePort: 32600
      port: 10000
    - name: webserver2
      nodePort: 32601
      port: 80
    type: NodePort